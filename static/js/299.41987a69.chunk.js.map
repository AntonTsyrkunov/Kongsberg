{"version":3,"file":"static/js/299.41987a69.chunk.js","mappings":"qMAmBA,EAjBe,WACb,OACE,0BACE,SAAC,KAAD,CACEA,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAKhB,E,SCqGD,EAlHmB,SAAC,GAKb,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,eACAC,EACI,EADJA,oBAEA,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,SAAAC,GACM,IAApBH,EAASI,OACXH,EAAYE,GAEZF,EAAY,IAEdF,GAAgBD,EACjB,EAMD,OACE,iCACE,4BACE,mBAAQO,KAAK,SAASC,QAAS,kBAAMV,GAAN,EAA/B,SAA4D,SAG3D,qBAGFH,GAASA,EAAMW,OAAS,EACvBV,GACE,SAAC,EAAD,KAEA,8BACE,4BACE,2BACE,wBAAI,eACJ,wBAAI,WACJ,wBAAI,cACJ,wBAAI,oBACJ,wBAAI,WACJ,wBAAI,wBACJ,wBAAI,mBAGR,2BACGD,EAAMc,KAAI,SAAAJ,GAAI,OACb,2BACE,wBAAKA,EAAKK,MACV,wBAAKL,EAAKM,WAAWC,SACrB,wBAAKP,EAAKM,WAAWE,YACrB,yBACE,mBACEN,KAAK,SACLC,QAAS,kBAtCNM,EAsC2BT,EAAKM,WAAWI,aArChElB,EAAeiB,GADM,IAAAA,CAsCM,EAFX,SAIGT,EAAKM,WAAWI,aAIrB,wBACGV,EAAKM,WAAWK,YACjBX,EAAKM,WAAWK,WAAWC,gBACzB,gBACEC,IAAKb,EAAKM,WAAWK,WAAWC,eAChCE,IAAI,GACJ9B,MAAM,MACND,OAAO,SAGT,uBAAG,8BAGP,wBAAKiB,EAAKM,WAAWS,iBACrB,wBAAKf,EAAKM,WAAWU,YACrB,yBACE,mBACEd,KAAK,SACLC,QAAS,kBAAMJ,EAAYC,EAAlB,EAFX,SAIG,4BAjCEA,EAAKK,GADD,SA0CnB,KACHV,IACC,UAACsB,EAAA,EAAD,CAAOlB,YAAaA,EAAaF,SAAUA,EAA3C,WACE,uBAAIA,EAASQ,MACb,uBAAIR,EAASS,WAAWC,SACxB,uBAAIV,EAASS,WAAWE,YACxB,uBAAIX,EAASS,WAAWI,WACxB,yBACGb,EAASS,WAAWK,YACrBd,EAASS,WAAWK,WAAWC,gBAC7B,gBAAKC,IAAKhB,EAASS,WAAWK,WAAWC,eAAgBE,IAAI,MAE7D,uBAAG,8BAIP,uBAAIjB,EAASS,WAAWS,iBACxB,uBAAIlB,EAASS,WAAWU,gBAKjC,C,4ECnHD,EAA0B,wBAA1B,EAA0D,sB,SCGpDE,EAAcC,SAASC,eAAe,cA6B5C,EA3Bc,SAAC,GAAwC,IAAtCrB,EAAqC,EAArCA,YAAasB,EAAwB,EAAxBA,SAAwB,EAAdxB,UACtCyB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MAAmB1B,GAC1B,EAID,OAFA2B,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACxB,IAMJ,OAAO8B,EAAAA,EAAAA,eACL,gBAAKC,UAAWC,EAAa5B,QALH,SAAA6B,GACtBA,EAAIC,SAAWD,EAAIE,eAAenC,GACvC,EAGC,UACE,gBAAK+B,UAAWC,EAAhB,SACGV,MAGLH,EAEH,C","sources":["components/Loader/Loader.jsx","components/BooksTable/BooksTable.jsx","webpack://books-search/./src/components/Modal/styles.module.css?45f9","components/Modal/Modal.jsx"],"sourcesContent":["import { Bars } from 'react-loader-spinner';\n// import css from '../Loader/Loader.module.css';\nconst Loader = () => {\n  return (\n    <div >\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        \n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import Modal from '../Modal/Modal';\nimport Loader from '../Loader/Loader';\nimport { useState } from 'react';\n\nconst BooksTable = ({\n  books,\n  loading,\n  onAuthorSearch,\n  handleBackFromTable,\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [bookdata, setBookData] = useState([]);\n\n  const toggleModal = book => {\n    if (bookdata.length === 0) {\n      setBookData(book);\n    } else {\n      setBookData([]);\n    }\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const getAuthorBooks = author => {\n    onAuthorSearch(author);\n  };\n\n  return (\n    <>\n      <div>\n        <button type=\"button\" onClick={() => handleBackFromTable()}>\n          Home\n        </button>\n        {'>Searched books'}\n      </div>\n\n      {books && books.length > 0 ? (\n        loading ? (\n          <Loader />\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Book's ID</th>\n                <th>Title</th>\n                <th>Subtitle</th>\n                <th>Author/Authors</th>\n                <th>Cover</th>\n                <th>Date of publishing</th>\n                <th>Language</th>\n              </tr>\n            </thead>\n            <tbody>\n              {books.map(book => (\n                <tr key={book.id}>\n                  <td>{book.id}</td>\n                  <td>{book.volumeInfo.title}</td>\n                  <td>{book.volumeInfo.subtitle}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => getAuthorBooks(book.volumeInfo.authors)}\n                    >\n                      {book.volumeInfo.authors}\n                      \n                    </button>\n                  </td>\n                  <td>\n                    {book.volumeInfo.imageLinks &&\n                    book.volumeInfo.imageLinks.smallThumbnail ? (\n                      <img\n                        src={book.volumeInfo.imageLinks.smallThumbnail}\n                        alt=\"\"\n                        width=\"50%\"\n                        height=\"50%\"\n                      />\n                    ) : (\n                      <p>No thumbnail available</p>\n                    )}\n                  </td>\n                  <td>{book.volumeInfo.publishedDate}</td>\n                  <td>{book.volumeInfo.language}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => toggleModal(book)}\n                    >\n                      {\"Press to learn info\"}\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )\n      ) : null}\n      {modalIsOpen && (\n        <Modal toggleModal={toggleModal} bookdata={bookdata}>\n          <p>{bookdata.id}</p>\n          <p>{bookdata.volumeInfo.title}</p>\n          <p>{bookdata.volumeInfo.subtitle}</p>\n          <p>{bookdata.volumeInfo.authors}</p>\n          <div>\n            {bookdata.volumeInfo.imageLinks &&\n            bookdata.volumeInfo.imageLinks.smallThumbnail ? (\n              <img src={bookdata.volumeInfo.imageLinks.smallThumbnail} alt=\"\" />\n            ) : (\n              <p>No thumbnail available</p>\n            )}\n          </div>\n\n          <p>{bookdata.volumeInfo.publishedDate}</p>\n          <p>{bookdata.volumeInfo.language}</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default BooksTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"styles_Overlay__nMvru\",\"Modal\":\"styles_Modal__25F64\",\"img\":\"styles_img__m7PBM\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './styles.module.css';\n\nconst modalWindow = document.getElementById('modal-root');\n\nconst Modal = ({ toggleModal, children, bookdata}) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') toggleModal();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleModal]);\n\n  const handleBackdropClick = evt => {\n    if (evt.target === evt.currentTarget) toggleModal();\n  };\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div className={css.Modal}>\n        {children}\n      </div>\n    </div>,\n    modalWindow\n  );\n};\n\nexport default Modal;\n"],"names":["height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","books","loading","onAuthorSearch","handleBackFromTable","useState","modalIsOpen","setModalIsOpen","bookdata","setBookData","toggleModal","book","length","type","onClick","map","id","volumeInfo","title","subtitle","author","authors","imageLinks","smallThumbnail","src","alt","publishedDate","language","Modal","modalWindow","document","getElementById","children","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","className","css","evt","target","currentTarget"],"sourceRoot":""}