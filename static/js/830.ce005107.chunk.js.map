{"version":3,"file":"static/js/830.ce005107.chunk.js","mappings":"0MAiIA,UA1HmB,SAAC,GAKb,IAJLA,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,eACAC,EACI,EADJA,oBAEA,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,SAAAC,GACM,IAApBH,EAASI,OACXH,EAAYE,GAEZF,EAAY,IAEdF,GAAgBD,EACjB,EAMD,OACE,iCACE,4BACE,SAAC,IAAD,CAAQO,QAAQ,OAAOC,QAAS,kBAAMV,GAAN,EAAhC,SAA6D,SAG5D,uBAGFH,GAASA,EAAMW,OAAS,EACvBV,GACE,SAAC,IAAD,KAEA,UAAC,IAAD,CAAOa,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,WACE,kBAAOC,UAAU,cAAjB,UACE,2BACE,wBAAI,eACJ,wBAAI,WACJ,wBAAI,cACJ,wBAAI,oBACJ,wBAAI,WACJ,wBAAI,wBACJ,wBAAI,cACJ,wBAGJ,2BACGlB,EAAMmB,KAAI,SAACT,EAAMU,GAAP,OACT,2BAGE,eAAIF,UAAU,cAAd,SAA6BR,EAAKW,MAClC,eAAIH,UAAU,cAAd,SAA6BR,EAAKY,WAAWC,SAC7C,eAAIL,UAAU,cAAd,SACGR,EAAKY,WAAWE,SACfd,EAAKY,WAAWE,SACb,iBAGP,eAAIN,UAAU,cAAd,SACGR,EAAKY,WAAWG,SAAW,SAAC,IAAD,CAC1Bb,QAAQ,OACRC,QAAS,kBA9CNa,EA8C2BhB,EAAKY,WAAWG,aA7ChEvB,EAAewB,GADM,IAAAA,CA8CM,EAFiB,SAIzBhB,EAAKY,WAAWG,UACL,mBAKhB,eAAIP,UAAU,cAAd,SACGR,EAAKY,WAAWK,YACjBjB,EAAKY,WAAWK,WAAWC,gBACzB,gBACEC,IAAKnB,EAAKY,WAAWK,WAAWC,eAChCE,IAAI,GACJC,MAAM,MACNC,OAAO,SAGT,uBAAG,8BAGP,eAAId,UAAU,cAAd,SACGR,EAAKY,WAAWW,iBAEnB,eAAIf,UAAU,cAAd,SAA6BR,EAAKY,WAAWY,YAC7C,eAAIhB,UAAU,cAAd,UACE,SAAC,IAAD,CAAQN,QAAQ,OAAOC,QAAS,kBAAMJ,EAAYC,EAAlB,EAAhC,SAAyD,sBAvCtDA,EAAKW,GAFH,SAkDf,KACHhB,IACC,UAAC,IAAD,CAAOI,YAAaA,EAAaF,SAAUA,EAAUW,UAAWiB,EAAAA,EAAAA,gBAAhE,WACE,yBAAG,YAAU5B,EAASc,OACtB,yBAAG,eAAad,EAASe,WAAWC,UACpC,yBAAG,kBAAgBhB,EAASe,WAAWE,aACvC,yBAAG,gBAAcjB,EAASe,WAAWG,YACrC,yBACGlB,EAASe,WAAWK,YACrBpB,EAASe,WAAWK,WAAWC,gBAC7B,gBAAKC,IAAKtB,EAASe,WAAWK,WAAWC,eAAgBE,IAAI,WAE7D,uBAAG,8BAGP,yBAAG,mBAAiBvB,EAASe,WAAWW,kBACxC,yBAAG,aAAW1B,EAASe,WAAWY,iBAK3C,C,4CC5GD,IAjBe,WACb,OACE,0BACE,SAAC,KAAD,CACEF,OAAO,KACPD,MAAM,KACNK,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAKhB,C,kECbKC,EAAcC,SAASC,eAAe,cA6B5C,IA3Bc,SAAC,GAAwC,IAAtClC,EAAqC,EAArCA,YAAamC,EAAwB,EAAxBA,SAAwB,EAAdrC,UACtCsC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MAAmBvC,GAC1B,EAID,OAFAwC,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACrC,IAMJ,OAAO2C,EAAAA,EAAAA,eACL,gBAAKlC,UAAWiB,EAAAA,EAAAA,QAAatB,QALH,SAAAwC,GACtBA,EAAIC,SAAWD,EAAIE,eAAe9C,GACvC,EAGC,UACE,gBAAKS,UAAS,UAAKiB,EAAAA,EAAAA,MAAL,YAAkBA,EAAAA,EAAAA,iBAAhC,SACGS,MAGLH,EAEH,C,qBC9BD,KAAgB,QAAU,wBAAwB,MAAQ,sBAAsB,IAAM,oBAAoB,gBAAkB,gCAAgC,eAAe,6BAA6B,YAAc,4B","sources":["components/BooksTable/BooksTable.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","webpack://books-search/./src/components/Modal/styles.module.css?45f9"],"sourcesContent":["import Modal from '../Modal/Modal';\nimport Loader from '../Loader/Loader';\nimport { useState } from 'react';\nimport css from '../Modal/styles.module.css'\n\nimport { Button, Table } from 'react-bootstrap';\n\nconst BooksTable = ({\n  books,\n  loading,\n  onAuthorSearch,\n  handleBackFromTable,\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [bookdata, setBookData] = useState([]);  \n\n  const toggleModal = book => {\n    if (bookdata.length === 0) {\n      setBookData(book);\n    } else {\n      setBookData([]);\n    }\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const getAuthorBooks = author => {\n    onAuthorSearch(author);\n  };\n\n  return (\n    <>\n      <div>\n        <Button variant=\"link\" onClick={() => handleBackFromTable()}>\n          Home\n        </Button>\n        {' > Searched books'}\n      </div>\n\n      {books && books.length > 0 ? (\n        loading ? (\n          <Loader />\n        ) : (\n          <Table striped bordered hover responsive>\n            <thead className=\"text-center\">\n              <tr>\n                <th>Book's ID</th>\n                <th>Title</th>\n                <th>Subtitle</th>\n                <th>Author/Authors</th>\n                <th>Cover</th>\n                <th>Date of publishing</th>\n                <th>Language</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {books.map((book, index) => (\n                <tr\n                  key={book.id}                  \n                >\n                  <td className=\"text-center\">{book.id}</td>\n                  <td className=\"text-center\">{book.volumeInfo.title}</td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.subtitle ? (\n                      book.volumeInfo.subtitle\n                    ) : ('No subtitle'\n                    )}\n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.authors ? (<Button\n                      variant=\"link\"\n                      onClick={() => getAuthorBooks(book.volumeInfo.authors)}\n                    >\n                      {book.volumeInfo.authors}\n                    </Button>) : ('Not mentioned')\n\n                    }\n                    \n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.imageLinks &&\n                    book.volumeInfo.imageLinks.smallThumbnail ? (\n                      <img\n                        src={book.volumeInfo.imageLinks.smallThumbnail}\n                        alt=\"\"\n                        width=\"50%\"\n                        height=\"50%\"\n                      />\n                    ) : (\n                      <p>No thumbnail available</p>\n                    )}\n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.publishedDate}\n                  </td>\n                  <td className=\"text-center\">{book.volumeInfo.language}</td>\n                  <td className=\"text-center\">\n                    <Button variant=\"link\" onClick={() => toggleModal(book)}>\n                      Expanded view\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )\n      ) : null}\n      {modalIsOpen && (\n        <Modal toggleModal={toggleModal} bookdata={bookdata} className={css.modal_container}>\n          <p>Book ID: {bookdata.id}</p>\n          <p>Book title: {bookdata.volumeInfo.title}</p>\n          <p>Book subtitle: {bookdata.volumeInfo.subtitle}</p>\n          <p>Book autors: {bookdata.volumeInfo.authors}</p>\n          <div>\n            {bookdata.volumeInfo.imageLinks &&\n            bookdata.volumeInfo.imageLinks.smallThumbnail ? (\n              <img src={bookdata.volumeInfo.imageLinks.smallThumbnail} alt=\"Cover\" />\n            ) : (\n              <p>No thumbnail available</p>\n            )}\n          </div>\n          <p>Published date: {bookdata.volumeInfo.publishedDate}</p>\n          <p>Language: {bookdata.volumeInfo.language}</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default BooksTable;\n","import { Bars } from 'react-loader-spinner';\n// import css from '../Loader/Loader.module.css';\nconst Loader = () => {\n  return (\n    <div >\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        \n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './styles.module.css';\n\nconst modalWindow = document.getElementById('modal-root');\n\nconst Modal = ({ toggleModal, children, bookdata}) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') toggleModal();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleModal]);\n\n  const handleBackdropClick = evt => {\n    if (evt.target === evt.currentTarget) toggleModal();\n  };\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div className={`${css.Modal} ${css.modal_container}`} >\n        {children}\n      </div>\n    </div>,\n    modalWindow\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"styles_Overlay__nMvru\",\"Modal\":\"styles_Modal__25F64\",\"img\":\"styles_img__m7PBM\",\"modal_container\":\"styles_modal_container__ffuur\",\"no-thumbnail\":\"styles_no-thumbnail__ichzL\",\"description\":\"styles_description__yj9t2\"};"],"names":["books","loading","onAuthorSearch","handleBackFromTable","useState","modalIsOpen","setModalIsOpen","bookdata","setBookData","toggleModal","book","length","variant","onClick","striped","bordered","hover","responsive","className","map","index","id","volumeInfo","title","subtitle","authors","author","imageLinks","smallThumbnail","src","alt","width","height","publishedDate","language","css","color","ariaLabel","wrapperStyle","wrapperClass","visible","modalWindow","document","getElementById","children","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","evt","target","currentTarget"],"sourceRoot":""}