{"version":3,"file":"static/js/735.4c243fd8.chunk.js","mappings":"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","sources":["components/AuthorBooks/AuthorBooks.jsx","components/Loader/Loader.jsx","components/BooksTable/BooksTable.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","API/API.js","components/Home/Home.jsx","webpack://books-search/./src/components/Modal/styles.module.css?45f9","components/Modal/Modal.jsx"],"sourcesContent":["import Modal from '../Modal/Modal';\nimport { useState } from 'react';\n\nconst AuthorBooks = ({ loading, authorsBooks, handleBackFromAuthor }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [bookdata, setBookData] = useState([]);\n\n  const toggleModal = book => {\n    if (bookdata.length === 0) {\n      setBookData(book);\n    } else {\n      setBookData([]);\n    }\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  return (\n    <>    \n      <div>\n        {'Home>'}\n        <button type=\"button\" onClick={() => handleBackFromAuthor()}>\n          {'Searched books'}\n        </button>\n        {'>Authors books'}\n      </div>\n      {authorsBooks.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Book's ID</th>\n              <th>Title</th>\n              <th>Publisher</th>\n              <th>Date of publishing</th>\n              <th>Description</th>\n              <th>Page count</th>\n              <th>Tumbnail</th>\n              <th>Language</th>\n            </tr>\n          </thead>\n          <tbody>\n            {authorsBooks.map(book => (\n              <tr key={book.id}>\n                <td>{book.id}</td>\n                <td>{book.volumeInfo.title}</td>\n                <td>{book.volumeInfo.publisher}</td>\n                <td>{book.volumeInfo.publishedDate}</td>\n                <td>{book.volumeInfo.description}</td>\n                <td>{book.volumeInfo.pageCount}</td>\n                <td>\n                  {book.volumeInfo.imageLinks &&\n                  book.volumeInfo.imageLinks.smallThumbnail ? (\n                    <img\n                      src={book.volumeInfo.imageLinks.smallThumbnail}\n                      alt=\"\"\n                      width=\"50%\"\n                      height=\"50%\"\n                    />\n                  ) : (\n                    <p>No thumbnail available</p>\n                  )}\n                </td>\n                <td>{book.volumeInfo.language}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    onClick={() => toggleModal(book)}\n                  >\n                    {\"Press to learn info\"}\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}      \n      {modalIsOpen && (\n        <Modal toggleModal={toggleModal} bookdata={bookdata}>\n          <p>{bookdata.id}</p>\n          <p>{bookdata.volumeInfo.title}</p>\n          <p>{bookdata.volumeInfo.publishe}</p>\n          <p>{bookdata.volumeInfo.publishedDate}</p>\n          <p>{bookdata.volumeInfo.description}</p>\n          <p>{bookdata.volumeInfo.pageCount}</p>\n          <div>\n            {bookdata.volumeInfo.imageLinks &&\n            bookdata.volumeInfo.imageLinks.smallThumbnail ? (\n              <img\n                src={bookdata.volumeInfo.imageLinks.smallThumbnail}\n                alt=\"\"\n              />\n            ) : (\n              <p>No thumbnail available</p>\n            )}\n          </div>\n          <p>{bookdata.volumeInfo.language}</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AuthorBooks;\n","import { Bars } from 'react-loader-spinner';\n// import css from '../Loader/Loader.module.css';\nconst Loader = () => {\n  return (\n    <div >\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        \n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import Modal from '../Modal/Modal';\nimport Loader from '../Loader/Loader';\nimport { useState } from 'react';\n\nconst BooksTable = ({\n  books,\n  loading,\n  onAuthorSearch,\n  handleBackFromTable,\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [bookdata, setBookData] = useState([]);\n\n  const toggleModal = book => {\n    if (bookdata.length === 0) {\n      setBookData(book);\n    } else {\n      setBookData([]);\n    }\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const getAuthorBooks = author => {\n    onAuthorSearch(author);\n  };\n\n  return (\n    <>\n      <div>\n        <button type=\"button\" onClick={() => handleBackFromTable()}>\n          Home\n        </button>\n        {'>Searched books'}\n      </div>\n\n      {books && books.length > 0 ? (\n        loading ? (\n          <Loader />\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Book's ID</th>\n                <th>Title</th>\n                <th>Subtitle</th>\n                <th>Author/Authors</th>\n                <th>Cover</th>\n                <th>Date of publishing</th>\n                <th>Language</th>\n              </tr>\n            </thead>\n            <tbody>\n              {books.map(book => (\n                <tr key={book.id}>\n                  <td>{book.id}</td>\n                  <td>{book.volumeInfo.title}</td>\n                  <td>{book.volumeInfo.subtitle}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => getAuthorBooks(book.volumeInfo.authors)}\n                    >\n                      {book.volumeInfo.authors}\n                      \n                    </button>\n                  </td>\n                  <td>\n                    {book.volumeInfo.imageLinks &&\n                    book.volumeInfo.imageLinks.smallThumbnail ? (\n                      <img\n                        src={book.volumeInfo.imageLinks.smallThumbnail}\n                        alt=\"\"\n                        width=\"50%\"\n                        height=\"50%\"\n                      />\n                    ) : (\n                      <p>No thumbnail available</p>\n                    )}\n                  </td>\n                  <td>{book.volumeInfo.publishedDate}</td>\n                  <td>{book.volumeInfo.language}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => toggleModal(book)}\n                    >\n                      {\"Press to learn info\"}\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )\n      ) : null}\n      {modalIsOpen && (\n        <Modal toggleModal={toggleModal} bookdata={bookdata}>\n          <p>{bookdata.id}</p>\n          <p>{bookdata.volumeInfo.title}</p>\n          <p>{bookdata.volumeInfo.subtitle}</p>\n          <p>{bookdata.volumeInfo.authors}</p>\n          <div>\n            {bookdata.volumeInfo.imageLinks &&\n            bookdata.volumeInfo.imageLinks.smallThumbnail ? (\n              <img src={bookdata.volumeInfo.imageLinks.smallThumbnail} alt=\"\" />\n            ) : (\n              <p>No thumbnail available</p>\n            )}\n          </div>\n\n          <p>{bookdata.volumeInfo.publishedDate}</p>\n          <p>{bookdata.volumeInfo.language}</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default BooksTable;\n","import { useState } from \"react\";\n\nconst Header = ({onSubmit}) => {\n    const [querry, setQuerry] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        setQuerry(e.target.value);\n    }\n\n    const handleSearch = evt => {\n        evt.preventDefault();\n        onSubmit(querry);\n        setQuerry('');\n      };\n\n    return(\n    <header>\n        <img src=\"\" alt=\"\" />\n        <form onSubmit={handleSearch}>\n            <p></p>\n        <input\n            name=\"querry\"\n            value={querry}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search books by it's name\"\n            onChange={handleInputChange}\n          />\n          <button type=\"submit\">Perform search</button>\n        </form>\n    </header>\n    )\n}\n\nexport {Header};","const Footer = () => {\n    return(\n        <>\n        </>\n    )\n}\n\nexport {Footer};","import axios from \"axios\";\n\nconst BASE_URL = \"https://www.googleapis.com/books/v1\";\nconst API_KEY = \"AIzaSyD7siH3qgQrWd6jVuDj43il8r36NIvUmEI\";\n\nexport const getBooks = (title) => {\n    const response = axios.get(`${BASE_URL}/volumes?q=${title}+inauthor&key=${API_KEY}`);\n    return response;\n};\nexport const getBooksByAuthor = (author) => {\n      const response = axios.get(`${BASE_URL}/volumes`, {\n        params: {\n          q: `inauthor:${author}`,\n          key: API_KEY\n        },\n      });  \n      return response;    \n    }\n\n \n\n\n","import BooksTable from '../BooksTable/BooksTable';\nimport AuthorBooks from '../AuthorBooks/AuthorBooks';\nimport { Header } from '../Header/Header';\nimport { Footer } from '../Footer/Footer';\n\nimport { useState, useEffect } from 'react';\n\nimport { getBooks, getBooksByAuthor } from 'API/API';\n\nconst Home = () => {\n  const [books, setBooks] = useState([]);\n  const [querry, setQuerry] = useState('');\n  const [authorsBooks, setAuthorsBooks] = useState([]);\n  const [authorName, setAuthorName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayHomepage, setDisplayHomepage] = useState(true);\n  const [displayCommonTable, setDisplayCommonTable] = useState(false);\n  const [displayAuthorTable, setDisplayAutorTable] = useState(false);\n\n  const handleSearchByQuery = title => {\n    setQuerry(title);\n  };\n\n  const handleSearchByAuthor = name => {\n    setAuthorName(name);\n  };\n\n  useEffect(() => {\n    if (!querry) {\n      return;\n    }\n    const fetchData = async () => {\n      setLoading(true);\n      const data = await getBooks(querry);\n      setBooks(prev => [...prev, ...data.data.items]);\n      setLoading(false);\n      setDisplayHomepage(false);\n      setDisplayCommonTable(true);\n    };\n    fetchData();\n  }, [querry]);\n\n  useEffect(() => {\n    if (!authorName) {\n      return;\n    }\n    const fetchData = async () => {\n      setLoading(true);\n      setDisplayCommonTable(false);\n      setDisplayAutorTable(true);\n      const data = await getBooksByAuthor(authorName);\n      setAuthorsBooks(data.data.items);\n      setLoading(false);\n    };\n    fetchData();\n  }, [authorName]);\n\n  const handleBackFromTable = () => {\n    setDisplayHomepage(true);\n    setDisplayCommonTable(false);\n    setBooks([]);\n    setQuerry('');\n  };\n\n  const handleBackFromAuthor = () => {\n    setDisplayCommonTable(true);\n    setDisplayAutorTable(false);\n    setAuthorName('');\n    setAuthorsBooks([]);\n  };\n\n  return (\n    <>\n      <Header onSubmit={handleSearchByQuery}></Header>\n      {\n        displayHomepage && <p>Home</p>\n      }\n      {displayCommonTable && (\n        <BooksTable\n          loading={loading}\n          books={books}\n          onAuthorSearch={handleSearchByAuthor}\n          handleBackFromTable={handleBackFromTable}\n        />\n      )}\n      {displayAuthorTable && (\n        <AuthorBooks\n          loading={loading}\n          authorsBooks={authorsBooks}\n          handleBackFromAuthor={handleBackFromAuthor}\n        />\n      )}\n      <Footer></Footer>\n    </>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"styles_Overlay__nMvru\",\"Modal\":\"styles_Modal__25F64\",\"img\":\"styles_img__m7PBM\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './styles.module.css';\n\nconst modalWindow = document.getElementById('modal-root');\n\nconst Modal = ({ toggleModal, children, bookdata}) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') toggleModal();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleModal]);\n\n  const handleBackdropClick = evt => {\n    if (evt.target === evt.currentTarget) toggleModal();\n  };\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div className={css.Modal}>\n        {children}\n      </div>\n    </div>,\n    modalWindow\n  );\n};\n\nexport default Modal;\n"],"names":["loading","authorsBooks","handleBackFromAuthor","useState","modalIsOpen","setModalIsOpen","bookdata","setBookData","toggleModal","book","length","type","onClick","map","id","volumeInfo","title","publisher","publishedDate","description","pageCount","imageLinks","smallThumbnail","src","alt","width","height","language","publishe","color","ariaLabel","wrapperStyle","wrapperClass","visible","books","onAuthorSearch","handleBackFromTable","subtitle","author","authors","Modal","Header","onSubmit","querry","setQuerry","evt","preventDefault","name","value","autoComplete","autoFocus","placeholder","onChange","e","target","Footer","BASE_URL","API_KEY","setBooks","setAuthorsBooks","authorName","setAuthorName","setLoading","displayHomepage","setDisplayHomepage","displayCommonTable","setDisplayCommonTable","displayAuthorTable","setDisplayAutorTable","useEffect","fetchData","axios","data","prev","items","params","q","key","BooksTable","AuthorBooks","modalWindow","document","getElementById","children","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","className","css","currentTarget"],"sourceRoot":""}