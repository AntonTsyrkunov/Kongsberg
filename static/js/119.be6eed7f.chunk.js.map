{"version":3,"file":"static/js/119.be6eed7f.chunk.js","mappings":"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","sources":["components/AuthorBooks/AuthorBooks.jsx","components/BooksTable/BooksTable.jsx","webpack://books-search/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","webpack://books-search/./src/components/Home/Home.module.css?58dd","API/API.js","components/Home/Home.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","webpack://books-search/./src/components/Modal/styles.module.css?45f9"],"sourcesContent":["import Modal from '../Modal/Modal';\nimport Loader from '../Loader/Loader';\nimport { useState } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport css from '../Modal/styles.module.css'\n\nconst AuthorBooks = ({\n  loading,\n  authorsBooks,\n  handleBackFromAuthor,\n  handleBackHomeFromAuthor,\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [bookdata, setBookData] = useState([]);\n\n  const toggleModal = book => {\n    if (bookdata.length === 0) {\n      setBookData(book);\n    } else {\n      setBookData([]);\n    }\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  return (\n    <>\n      <div>\n        <Button variant=\"link\" onClick={() => handleBackHomeFromAuthor()}>\n          Home\n        </Button>\n        <Button variant=\"link\" onClick={() => handleBackFromAuthor()}>\n          Searched books\n        </Button>\n        {' > Authors books'}\n      </div>\n      {authorsBooks && authorsBooks.length > 0 ? (\n        loading ? (\n          <Loader />\n        ) : (\n          <Table striped bordered hover responsive>\n            <thead className=\"text-center\">\n              <tr>\n                <th>Book's ID</th>\n                <th>Title</th>\n                <th>Publisher</th>\n                <th>Date of publishing</th>\n                <th>Description</th>\n                <th>Page count</th>\n                <th>Thumbnail</th>\n                <th>Language</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {authorsBooks.map((book, index) => (\n                <tr key={book.id}>\n                  <td className=\"text-center\">{book.id}</td>\n                  <td className=\"text-center\">{book.volumeInfo.title}</td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.publisher\n                      ? book.volumeInfo.publisher\n                      : 'Unknown'}\n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.publishedDate\n                      ? book.volumeInfo.publishedDate\n                      : 'Unknown'}\n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.description\n                      ? book.volumeInfo.description\n                      : 'No description available'}\n                  </td>\n                  <td className=\"text-center\">{book.volumeInfo.pageCount}</td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.imageLinks &&\n                    book.volumeInfo.imageLinks.smallThumbnail ? (\n                      <img\n                        src={book.volumeInfo.imageLinks.smallThumbnail}\n                        alt=\"Cover\"\n                        width=\"50%\"\n                        height=\"50%\"\n                      />\n                    ) : (\n                      <p>No thumbnail available</p>\n                    )}\n                  </td>\n                  <td className=\"text-center\">{book.volumeInfo.language}</td>\n                  <td className=\"text-center\">\n                    <Button variant=\"link\" onClick={() => toggleModal(book)}>\n                      Expanded view\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )\n      ) : null}\n      {modalIsOpen && (\n        <Modal toggleModal={toggleModal} bookdata={bookdata} className={css.modal_container}>\n          <p>Book ID: {bookdata.id}</p>\n          <p>Book title: {bookdata.volumeInfo.title}</p>\n          <p>Publisher: {bookdata.volumeInfo.publisher\n              ? bookdata.volumeInfo.publisher\n              : null}\n          </p>\n          <p>Published date: {bookdata.volumeInfo.publishedDate\n              ? bookdata.volumeInfo.publishedDate\n              : null}\n          </p>\n          <p className={css.description}>\n            Description: {bookdata.volumeInfo.description\n              ? bookdata.volumeInfo.description\n              : 'No description available'}\n          </p>\n          <p>Page count: {bookdata.volumeInfo.pageCount}</p>\n          <div>\n            {bookdata.volumeInfo.imageLinks &&\n            bookdata.volumeInfo.imageLinks.smallThumbnail ? (\n              <img\n                src={bookdata.volumeInfo.imageLinks.smallThumbnail}\n                alt=\"Cover\"\n                width=\"50%\"\n                height=\"50%\"\n              />\n            ) : (\n              <p>No thumbnail available</p>\n            )}\n          </div>\n          <p>Language: {bookdata.volumeInfo.language}</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AuthorBooks;\n","import Modal from '../Modal/Modal';\nimport Loader from '../Loader/Loader';\nimport { useState } from 'react';\nimport css from '../Modal/styles.module.css'\n\nimport { Button, Table } from 'react-bootstrap';\n\nconst BooksTable = ({\n  books,\n  loading,\n  onAuthorSearch,\n  handleBackFromTable,\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [bookdata, setBookData] = useState([]);  \n\n  const toggleModal = book => {\n    if (bookdata.length === 0) {\n      setBookData(book);\n    } else {\n      setBookData([]);\n    }\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const getAuthorBooks = author => {\n    onAuthorSearch(author);\n  };\n\n  return (\n    <>\n      <div>\n        <Button variant=\"link\" onClick={() => handleBackFromTable()}>\n          Home\n        </Button>\n        {' > Searched books'}\n      </div>\n\n      {books && books.length > 0 ? (\n        loading ? (\n          <Loader />\n        ) : (\n          <Table striped bordered hover responsive>\n            <thead className=\"text-center\">\n              <tr>\n                <th>Book's ID</th>\n                <th>Title</th>\n                <th>Subtitle</th>\n                <th>Author/Authors</th>\n                <th>Cover</th>\n                <th>Date of publishing</th>\n                <th>Language</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {books.map((book, index) => (\n                <tr\n                  key={book.id}                  \n                >\n                  <td className=\"text-center\">{book.id}</td>\n                  <td className=\"text-center\">{book.volumeInfo.title}</td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.subtitle ? (\n                      book.volumeInfo.subtitle\n                    ) : ('No subtitle'\n                    )}\n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.authors ? (<Button\n                      variant=\"link\"\n                      onClick={() => getAuthorBooks(book.volumeInfo.authors)}\n                    >\n                      {book.volumeInfo.authors}\n                    </Button>) : ('Not mentioned')\n\n                    }\n                    \n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.imageLinks &&\n                    book.volumeInfo.imageLinks.smallThumbnail ? (\n                      <img\n                        src={book.volumeInfo.imageLinks.smallThumbnail}\n                        alt=\"\"\n                        width=\"50%\"\n                        height=\"50%\"\n                      />\n                    ) : (\n                      <p>No thumbnail available</p>\n                    )}\n                  </td>\n                  <td className=\"text-center\">\n                    {book.volumeInfo.publishedDate}\n                  </td>\n                  <td className=\"text-center\">{book.volumeInfo.language}</td>\n                  <td className=\"text-center\">\n                    <Button variant=\"link\" onClick={() => toggleModal(book)}>\n                      Expanded view\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )\n      ) : null}\n      {modalIsOpen && (\n        <Modal toggleModal={toggleModal} bookdata={bookdata} className={css.modal_container}>\n          <p>Book ID: {bookdata.id}</p>\n          <p>Book title: {bookdata.volumeInfo.title}</p>\n          <p>Book subtitle: {bookdata.volumeInfo.subtitle}</p>\n          <p>Book autors: {bookdata.volumeInfo.authors}</p>\n          <div>\n            {bookdata.volumeInfo.imageLinks &&\n            bookdata.volumeInfo.imageLinks.smallThumbnail ? (\n              <img src={bookdata.volumeInfo.imageLinks.smallThumbnail} alt=\"Cover\" />\n            ) : (\n              <p>No thumbnail available</p>\n            )}\n          </div>\n          <p>Published date: {bookdata.volumeInfo.publishedDate}</p>\n          <p>Language: {bookdata.volumeInfo.language}</p>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default BooksTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"placeholder_normal\":\"Header_placeholder_normal__9akF1\"};","import { useState } from \"react\";\nimport { Form, FormControl, Button, Container, Row, Col } from 'react-bootstrap';\nimport css from '../Header/Header.module.css'\n\nconst Header = ({onSubmit}) => {\n    const [querry, setQuerry] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        setQuerry(e.target.value);\n    }\n\n    const handleSearch = evt => {\n        evt.preventDefault();\n        onSubmit(querry);\n        setQuerry('');\n      };\n\n      return (\n        <header className=\"header\">\n          <Container style={{ padding: '20px' }}>\n            <Row className=\"align-items-center justify-content-center\">              \n              <Col xs={10} sm={6} md={8} lg={9}>\n                <Form onSubmit={handleSearch}>\n                  <Form.Group controlId=\"formSearch\">\n                    <Row className=\"align-items-center\">\n                      <Col xs={9} sm={8} md={9}>\n                        <FormControl\n                          name=\"query\"\n                          value={querry}\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          autoFocus\n                          placeholder=\"Enter your query\"\n                          className={css.placeholder_normal}\n                          onChange={handleInputChange}\n                        />\n                      </Col>\n                      <Col xs={3} sm={4} md={3}>\n                        <Button variant=\"primary\" type=\"submit\" block>\n                          Perform search\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n      );\n}\n\nexport {Header};","// extracted by mini-css-extract-plugin\nexport default {\"background_image\":\"Home_background_image__UO-fF\",\"centered_text\":\"Home_centered_text__tWCYY\",\"pulsating_text\":\"Home_pulsating_text__xVstc\",\"pulsate\":\"Home_pulsate__TLzfa\"};","import axios from \"axios\";\n\nconst BASE_URL = \"https://www.googleapis.com/books/v1\";\nconst API_KEY = \"AIzaSyD7siH3qgQrWd6jVuDj43il8r36NIvUmEI\";\n\nexport const getBooks = (title) => {\n    const response = axios.get(`${BASE_URL}/volumes?q=${title}+inauthor&key=${API_KEY}`);\n    return response;\n};\nexport const getBooksByAuthor = (author) => {\n      const response = axios.get(`${BASE_URL}/volumes`, {\n        params: {\n          q: `inauthor:${author}`,\n          key: API_KEY\n        },\n      });  \n      return response;    \n    }\n\n \n\n\n","import BooksTable from '../BooksTable/BooksTable';\nimport AuthorBooks from '../AuthorBooks/AuthorBooks';\nimport { Header } from '../Header/Header';\nimport css from './Home.module.css'\n\nimport { useState, useEffect } from 'react';\n\nimport { getBooks, getBooksByAuthor } from 'API/API';\n\nconst Home = () => {\n  const [books, setBooks] = useState([]);\n  const [querry, setQuerry] = useState('');\n  const [authorsBooks, setAuthorsBooks] = useState([]);\n  const [authorName, setAuthorName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayHomepage, setDisplayHomepage] = useState(true);\n  const [displayCommonTable, setDisplayCommonTable] = useState(false);\n  const [displayAuthorTable, setDisplayAutorTable] = useState(false);\n\n  const handleSearchByQuery = title => {\n    setQuerry(title);\n  };\n\n  const handleSearchByAuthor = name => {\n    setAuthorName(name);\n  };\n\n  useEffect(() => {\n    if (!querry) {\n      return;\n    }\n    const fetchData = async () => {\n      setLoading(true);\n      const data = await getBooks(querry);\n      setBooks(prev => [...prev, ...data.data.items]);\n      setLoading(false);\n      setDisplayHomepage(false);\n      setDisplayCommonTable(true);\n    };\n    fetchData();\n  }, [querry]);\n\n  useEffect(() => {\n    if (!authorName) {\n      return;\n    }\n    const fetchData = async () => {\n      setLoading(true);\n      setDisplayCommonTable(false);\n      setDisplayAutorTable(true);\n      const data = await getBooksByAuthor(authorName);\n      setAuthorsBooks(data.data.items);\n      setLoading(false);\n    };\n    fetchData();\n  }, [authorName]);\n\n  const handleBackFromTable = () => {\n    setDisplayHomepage(true);\n    setDisplayCommonTable(false);\n    setBooks([]);\n    setQuerry('');\n  };\n\n  const handleBackFromAuthor = () => {\n    setDisplayCommonTable(true);\n    setDisplayAutorTable(false);\n    setAuthorName('');\n    setAuthorsBooks([]);\n  };\n\n  const handleBackHomeFromAuthor = () => {\n    setDisplayHomepage(true);\n    setDisplayCommonTable(false);\n    setDisplayAutorTable(false);\n    setAuthorName('');\n    setAuthorsBooks([]);\n    setBooks([]);\n    setQuerry('');\n  };\n\n  return (\n    <div className={css.background_image}>\n      <Header onSubmit={handleSearchByQuery}></Header>\n      {displayHomepage && (\n        <p className={`${css.centered_text} ${css.pulsating_text}`}>\n          Welcome!\n          <br />\n          Please enter the name of the book or keyword for search\n        </p>\n      )}\n      {displayCommonTable && (\n        <BooksTable\n          loading={loading}\n          books={books}\n          onAuthorSearch={handleSearchByAuthor}\n          handleBackFromTable={handleBackFromTable}\n        />\n      )}\n      {displayAuthorTable && (\n        <AuthorBooks\n          loading={loading}\n          authorsBooks={authorsBooks}\n          handleBackFromAuthor={handleBackFromAuthor}\n          handleBackHomeFromAuthor={handleBackHomeFromAuthor}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { Bars } from 'react-loader-spinner';\n// import css from '../Loader/Loader.module.css';\nconst Loader = () => {\n  return (\n    <div >\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        \n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './styles.module.css';\n\nconst modalWindow = document.getElementById('modal-root');\n\nconst Modal = ({ toggleModal, children, bookdata}) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') toggleModal();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleModal]);\n\n  const handleBackdropClick = evt => {\n    if (evt.target === evt.currentTarget) toggleModal();\n  };\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div className={`${css.Modal} ${css.modal_container}`} >\n        {children}\n      </div>\n    </div>,\n    modalWindow\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"styles_Overlay__nMvru\",\"Modal\":\"styles_Modal__25F64\",\"img\":\"styles_img__m7PBM\",\"modal_container\":\"styles_modal_container__ffuur\",\"no-thumbnail\":\"styles_no-thumbnail__ichzL\",\"description\":\"styles_description__yj9t2\"};"],"names":["loading","authorsBooks","handleBackFromAuthor","handleBackHomeFromAuthor","useState","modalIsOpen","setModalIsOpen","bookdata","setBookData","toggleModal","book","length","variant","onClick","striped","bordered","hover","responsive","className","map","index","id","volumeInfo","title","publisher","publishedDate","description","pageCount","imageLinks","smallThumbnail","src","alt","width","height","language","css","books","onAuthorSearch","handleBackFromTable","subtitle","authors","author","Header","onSubmit","querry","setQuerry","Container","style","padding","Row","Col","xs","sm","md","lg","Form","evt","preventDefault","controlId","FormControl","name","value","type","autoComplete","autoFocus","placeholder","onChange","e","target","Button","block","BASE_URL","API_KEY","setBooks","setAuthorsBooks","authorName","setAuthorName","setLoading","displayHomepage","setDisplayHomepage","displayCommonTable","setDisplayCommonTable","displayAuthorTable","setDisplayAutorTable","useEffect","fetchData","axios","data","prev","items","params","q","key","BooksTable","AuthorBooks","color","ariaLabel","wrapperStyle","wrapperClass","visible","modalWindow","document","getElementById","children","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget"],"sourceRoot":""}